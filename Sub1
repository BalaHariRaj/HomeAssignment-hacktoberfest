export const generateId = (length) => {
	let result = '';
	const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
	const charactersLength = characters.length;
	for (let i = 0; i < length; i++)
		result += characters.charAt(Math.floor(Math.random() * charactersLength));

	return result;
}
export function appendProdMetaDataToOrders(orderLines) {
	orderLines.map(orderLine => {
		const product = process.prodCacheMap[orderLine.product_id];

		if (product) {
			orderLine.image_url = product.image_url;
			orderLine.description = product.description;
		}

		return orderLine;
	});
}export const generateId = (length) => {
	let result = '';
	const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
	const charactersLength = characters.length;
	for (let i = 0; i < length; i++)
		result += characters.charAt(Math.floor(Math.random() * charactersLength));

	return result;
}
export function appendProdMetaDataToOrders(orderLines) {
	orderLines.map(orderLine => {
		const product = process.prodCacheMap[orderLine.product_id];

		if (product) {
			orderLine.image_url = product.image_url;
			orderLine.description = product.description;
		}

		return orderLine;
	});
}export const generateId = (length) => {
	let result = '';
	const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
	const charactersLength = characters.length;
	for (let i = 0; i < length; i++)
		result += characters.charAt(Math.floor(Math.random() * charactersLength));

	return result;
}
export function appendProdMetaDataToOrders(orderLines) {
	orderLines.map(orderLine => {
		const product = process.prodCacheMap[orderLine.product_id];

		if (product) {
			orderLine.image_url = product.image_url;
			orderLine.description = product.description;
		}

		return orderLine;
	});
}
